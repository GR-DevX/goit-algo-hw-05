class HashTable:
    def __init__(self, size):
        self.size = size
        self.table = [[] for _ in range(self.size)]

    def hash_function(self, key):
        return hash(key) % self.size

    def insert(self, key, value):
        key_hash = self.hash_function(key)
        key_value = [key, value]

        if not self.table[key_hash]:
            self.table[key_hash].append(key_value)
            return True
        else:
            for pair in self.table[key_hash]:
                if pair[0] == key:
                    pair[1] = value  # Оновлюємо значення, якщо ключ вже існує
                    return True
            self.table[key_hash].append(key_value) # Додаємо нову пару, якщо ключа немає
            return True

    def get(self, key):
        key_hash = self.hash_function(key)
        if self.table[key_hash]:
            for pair in self.table[key_hash]:
                if pair[0] == key:
                    return pair[1]
        return None

    def delete(self, key):
        key_hash = self.hash_function(key)
        if self.table[key_hash]:
            for i, pair in enumerate(self.table[key_hash]):
                if pair[0] == key:
                    self.table[key_hash].pop(i)
                    return True
        return False

# Тестування HashTable з методом delete
H = HashTable(5)
H.insert("apple", 10)
H.insert("orange", 20)
H.insert("banana", 30)
H.insert("mango", 40) # Може потрапити в той же бакет, що й apple, якщо hash("mango") % 5 == hash("apple") % 5

print("HashTable перед видаленням:")
for i, bucket in enumerate(H.table):
    print(f"Бакет {i}: {bucket}")

print("\nЗначення для 'apple':", H.get("apple")) # Очікуємо 10
print("Видалення 'apple':", H.delete("apple")) # Очікуємо True
print("Значення для 'apple' після видалення:", H.get("apple")) # Очікуємо None

print("Видалення 'grape' (неіснуючий ключ):", H.delete("grape")) # Очікуємо False

print("\nHashTable після видалень:")
for i, bucket in enumerate(H.table):
    print(f"Бакет {i}: {bucket}")

H.insert("apple", 15) # Додаємо знову
print("\nЗначення для 'apple' після повторного додавання:", H.get("apple")) # Очікуємо 15
print("HashTable після повторного додавання 'apple':")
for i, bucket in enumerate(H.table):
    print(f"Бакет {i}: {bucket}")
